{"version":3,"file":"vue.js","sources":["../src/compiler.js","../src/utils.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["export function compileToFunction(template){\r\n    console.log(template);\r\n}","export function isFunction(val){\r\n    return typeof val === 'function';\r\n}\r\n\r\nexport function isObject(val){\r\n    return typeof val === 'object' && val !== null;\r\n}","let oldArrayPrototype = Array.prototype;\r\nexport let arrayMethods = Object.create(oldArrayPrototype);\r\n// arrayMethods.__proto__ = Array.prototype 继承\r\n\r\nlet methods = [\"push\", \"shift\", \"unshift\", \"pop\", \"reverse\", \"sort\", \"splice\"];\r\n\r\nmethods.forEach((method) => {\r\n  //用户调用的如果是以上的七个方法会用我自己重写的，否则用原来的数组方法\r\n  arrayMethods[method] = function (...args) {\r\n    //args 是参数列表 arr.push(1,2,3)\r\n    //相当于数组调用了重写后的方法。\r\n    oldArrayPrototype[method].call(this, ...args); //arr.push(1,2,3)\r\n\r\n    let inserted;\r\n    let ob = this.__ob__; //this.__ob__ 根据当前数组是数组的observer对象的实例, 获取到observeArray这个方法;\r\n    switch (method) {\r\n      case \"push\":\r\n      case \"unshift\":\r\n        inserted = args; //新增的内容\r\n        break;\r\n      case \"splice\":\r\n        inserted = args.slice(2);\r\n        break;\r\n    }\r\n\r\n    //如果有新增的内容要继续进行劫持 我需要观测数组的中的每一项(每一项可能是数组或对象) 而不是整个数组\r\n    if(inserted) ob.observeArray(inserted);\r\n  };\r\n});","import { isObject } from \"../utils\";\r\nimport { arrayMethods } from \"./array\";\r\n\r\n//1.如果数据是对象，会将对象不停递归，进行劫持\r\n//2.如果数据是数组，会重写劫持数组的方法，并对数组中不是基本数据类型的数据进行劫持\r\n\r\n//检测数据变化，类有类型， 对象无类型\r\nclass Observe {\r\n  constructor(data) {\r\n\r\n    Object.defineProperty(data, \"__ob__\", {\r\n      enumerable: false, //不可枚举\r\n      //  值指代的就是Observer的实例\r\n      value: this\r\n    })\r\n    // data.__ob__ = this; //所有被劫持过的属性都有__ob__属性\r\n\r\n    if (Array.isArray(data)) {\r\n      //数组劫持逻辑\r\n      //对数组原来的方法进行改写，切片编程 高阶函数\r\n      data.__proto__ = arrayMethods;\r\n      //如果数组中的数据是对象类型，需要监控对象的变化\r\n      this.observeArray(data);\r\n    } else {\r\n      //对象劫持逻辑\r\n      //对对象中的所有属性 进行劫持\r\n      this.walk(data);\r\n    }\r\n  }\r\n\r\n  //对我们数组中的数组 和 数组的对象再次劫持 递归了\r\n  observeArray(data) {\r\n    data.forEach((item) => {\r\n      observe(item);\r\n    });\r\n  }\r\n\r\n  walk(data) {\r\n    // 对象上的所有属性依次进行观测\r\n    Object.keys(data).forEach((key) => {\r\n      defineReactive(data, key, data[key]);\r\n    });\r\n  }\r\n}\r\n\r\n// vue2 会对对象进行遍历，将每个属性 用defineProperty 重新定义, 性能差\r\nfunction defineReactive(data, key, value) {\r\n  //value 有可能是对象\r\n  observe(value); //用户默认值是对象套对象，需要递归处理(性能较差)\r\n  Object.defineProperty(data, key, {\r\n    get() {\r\n      return value;\r\n    },\r\n    set(newV) {\r\n      observe(newV); //如果用户赋值一个新对象，需要将这个对象进行劫持\r\n      value = newV;\r\n    },\r\n  });\r\n}\r\nexport function observe(data) {\r\n  //如果是对象才观测\r\n\r\n  //不是对象直接跳出\r\n  if (!isObject(data)) {\r\n    return;\r\n  }\r\n\r\n  //如果对象被观测过，直接跳出\r\n  if (data.__ob__) {\r\n    return;\r\n  }\r\n\r\n  //默认最外层的data必须是个对象\r\n  return new Observe(data);\r\n}\r\n","import { observe } from \"./observer/index.js\";\r\nimport { isFunction } from \"./utils\";\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options;\r\n  // 这里初始化的顺序依次是 prop>methods>data>computed>watch\r\n  if (opts.data) {\r\n    initData(vm);\r\n  }\r\n  if (opts.computed) {\r\n    initComputed();\r\n  }\r\n  if (opts.watch) {\r\n    initWatch();\r\n  }\r\n}\r\n\r\n// 初始化data数据\r\nfunction initData(vm) {\r\n  let data = vm.$options.data;\r\n  // vue2中会将data的所有数据 进行数据劫持 Object.defineProperty\r\n\r\n  //data.call(vm) 将this指向vm并调用一下该方法保证返回的是一个对象 通过_data进行关联\r\n  data = vm._data = isFunction(data) ? data.call(vm) : data;\r\n\r\n  // 把data数据代理到vm 也就是Vue实例上面 我们可以使用this.a来访问this._data.a\r\n  for (let key in data) {\r\n    proxy(vm, \"_data\", key); //vm.name == 'xxx'\r\n  }\r\n\r\n  //对数据进行观测 --响应式数据核心\r\n  observe(data);\r\n}\r\n\r\n//代理函数\r\n// Object.defineProperty(object, key, { ... })：\r\n// 在目标对象 object 上定义一个新的属性 key，并通过配置属性描述符（descriptor）来设置它的 getter 和 setter。\r\nfunction proxy(vm, source, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[source][key];\r\n    },\r\n    set(newValue) {\r\n      vm[source][key] = newValue;\r\n    },\r\n  });\r\n}\r\n","import { compileToFunction } from \"./compiler\";\r\nimport { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) {\r\n  //表示在vue的基础上做一次混合操作\r\n  Vue.prototype._init = function (options) {\r\n    //el data\r\n    const vm = this;\r\n    vm.$options = options; //会对options进行扩展\r\n\r\n    //对数据进行初始化 watch computed props data ...\r\n    initState(vm); //vue.$options.data 数据劫持\r\n\r\n    if (vm.$options.el) {\r\n      vm.$mount(vm.$options.el);\r\n    }\r\n  };\r\n\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this;\r\n    const options = vm.$options;\r\n    el = document.querySelector(el);\r\n\r\n    // 把模版转换为 对应的渲染函数 => 虚拟dom概念 vnode =>diff算法 更新虚拟dom => 产生真实节点，更新\r\n    if (!options.render) {\r\n      // 如果没有render函数，则使用template 目前没有render\r\n      let template = options.template;\r\n      if (!template && el) {\r\n        // 如果没有template，但是有el，则使用el\r\n        template = el.outerHTML;\r\n        let render = compileToFunction(template);\r\n        options.render = render;\r\n      }\r\n    }\r\n    //options.render就是渲染函数\r\n  };\r\n}\r\n","import { initMixin } from \"./init\";\r\n\r\nfunction Vue(options) {\r\n    //options 为用户传入的选项\r\n    this._init(options); //初始化操作，组件\r\n}\r\n\r\n// 扩展原型\r\n// initMixin 把_init 方法挂载在 Vue 原型 供 Vue 实例调用\r\ninitMixin(Vue)\r\n\r\nexport default Vue;"],"names":[],"mappings":"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"}