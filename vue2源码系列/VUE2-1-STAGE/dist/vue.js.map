{"version":3,"file":"vue.js","sources":["../src/compiler/generate.js","../src/compiler/parser.js","../src/compiler/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/utils.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/vdom/index.js","../src/render.js","../src/index.js"],"sourcesContent":["const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; //匹配花括号 {{  }} 捕获花括号里面的内容\r\n// 处理attrs属性\r\nfunction genProps(attrs) {\r\n  //[{name:'id',value:'app'}]\r\n  let str = \"\";\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i];\r\n\r\n    //对attr中的style单独进行处理\r\n    if (attr.name === \"style\") {\r\n      let styleObj = {};\r\n      attr.value.replace(/([^;:]+)\\:([^;:]+)/g, function () {\r\n        // 以;分割\r\n        styleObj[arguments[1]] = arguments[2];\r\n      });\r\n      attr.value = styleObj;\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`;\r\n  }\r\n\r\n  return `{${str.slice(0, -1)}}`;\r\n}\r\n\r\nfunction gen(el) {\r\n\r\n  // 判断节点类型\r\n  // 主要包含处理文本核心\r\n  // 源码这块包含了复杂的处理  比如 v-once v-for v-if 自定义指令 slot等等  咱们这里只考虑普通文本和变量表达式{{}}的处理\r\n\r\n  //如果是元素,则递归生成\r\n  if (el.type === 1) {\r\n    //   递归创建\r\n    return generate(el);\r\n  } else {\r\n    //   如果是文本节点\r\n    let text = el.text;\r\n\r\n    // 不存在花括号变量表达式\r\n    if (!defaultTagRE.test(text)) {\r\n      return `_v('${text}')`;\r\n    } else {\r\n      // 有花括号变量表达式 {{attr}}\r\n      let tokens = [];\r\n\r\n      let match;\r\n\r\n      // 正则是全局模式 每次需要重置正则的lastIndex属性  不然会引发匹配bug\r\n      let lastIndex = (defaultTagRE.lastIndex = 0);\r\n\r\n      while ((match = defaultTagRE.exec(text))) {\r\n        //看有没有匹配到\r\n        let index = match.index; //开始索引\r\n\r\n        if (index > lastIndex) {\r\n          //   匹配到的{{位置  在tokens里面放入普通文本\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n        }\r\n         //   放入捕获到的变量内容\r\n        tokens.push(`_s(${match[1].trim()})`); //防止拼的变量是对象类型  JSON.stringify()\r\n\r\n        //   匹配指针后移\r\n        lastIndex = index + match[0].length; //结尾索引\r\n      }\r\n\r\n      // 如果匹配完了花括号  text里面还有剩余的普通文本 那么继续push\r\n      if (lastIndex < text.length) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n      }\r\n\r\n      // _v表示创建文本\r\n      return `_v(${tokens.join(\"+\")})`;\r\n    }\r\n  }\r\n}\r\n\r\n// 生成子节点 调用gen函数进行递归创建\r\nfunction genChildren(el) {\r\n  let children = el.children;\r\n\r\n  if (children) {\r\n    return children.map((c) => gen(c)).join(\",\");\r\n  }\r\n}\r\n\r\n// html字符串=>字符串_c('div',{id:'app',a:1},\"hello\")\r\nexport function generate(el) {\r\n\r\n  let children = genChildren(el);\r\n\r\n  //遍历树，将树拼接成字符串\r\n  let code = `_c('${el.tag}',${el.attrs.length ? genProps(el.attrs) : \"undefined\"}${\r\n    children ? `,${children}` : \"\"\r\n  })`;\r\n\r\n  return code;\r\n}\r\n","// 以下为源码的正则  对正则表达式不清楚的同学可以参考小编之前写的文章(前端进阶高薪必看 - 正则篇);\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; //匹配标签名 形如 abc-123\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; //匹配特殊标签 形如 abc:234 前面的abc:可有可无\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 匹配开始标签 形如 <abc-123 捕获里面的标签名\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束  >\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾 如 </abc-123> 捕获里面的标签名\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性  形如 id=\"app\"\r\n\r\n// 将解析后的结果 组装成一个树结构 栈\r\n\r\n// 生成ast方法\r\nfunction createAstElement(tagName, attrs) {\r\n  return {\r\n    tag: tagName,\r\n    type: 1, //元素类型\r\n    children: [],\r\n    parent: null,\r\n    attrs,\r\n  };\r\n}\r\n\r\n//根节点\r\nlet root = null;\r\n//判断标签关系的栈\r\nlet stack = [];\r\n\r\nfunction start(tagName, attributes) {\r\n\r\n  let parent = stack[stack.length - 1];\r\n\r\n  let element = createAstElement(tagName, attributes);\r\n\r\n  //如若没有根节点，将次元素作为根节点\r\n  if (!root) {\r\n    root = element;\r\n  }\r\n  element.parent = parent; //当放入栈中，继续父亲是谁\r\n\r\n  //形成树结构\r\n  if (parent) {\r\n    parent.children.push(element);\r\n  }\r\n  stack.push(element);\r\n}\r\n\r\nfunction end(tagName) {\r\n  let last = stack.pop();\r\n  if (last.tag !== tagName) {\r\n    throw new Error(\"标签有误\");\r\n  }\r\n}\r\n\r\nfunction chars(text) {\r\n  text = text.replace(/\\s/g, \"\");// 去掉空格\r\n  let parent = stack[stack.length - 1];\r\n  if (text) {\r\n    parent.children.push({\r\n      type: 3, //文本类型\r\n      text,\r\n    });\r\n  }\r\n}\r\n\r\n// 利用正则 匹配 html 字符串 遇到开始标签 结束标签和文本 解析完毕之后生成对应的 \r\n// ast 并建立相应的父子关联 不断的 advance 截取剩余的字符串 直到 html 全部解析完毕 \r\n// 咱们这里主要写了对于开始标签里面的属性的处理--parseStartTag\r\n\r\n\r\n\r\n// html字符串解析成对应的脚本来触发\r\nexport function parserHTML(html) {\r\n  //截取html字符串 每次匹配到了就往前继续匹配\r\n  function advance(len) {\r\n    html = html.substring(len);\r\n  }\r\n\r\n  // 匹配开始标签\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen);\r\n\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1], //捕获标签名\r\n        attrs: [], //标签属性\r\n      };\r\n\r\n      //匹配到了开始标签 就截取掉\r\n      advance(start[0].length);\r\n\r\n      // 开始匹配属性\r\n      // end代表结束符号>  如果不是匹配到了结束标签\r\n      // attr 表示匹配的属性\r\n\r\n      //判断是否遇到标签结尾\r\n      let end;\r\n      let attr;\r\n      //如果没有遇到标签结尾就不停的解析,并且匹配到属性\r\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n        //存储开始标签中的属性值与属性名\r\n        match.attrs.push({\r\n          name: attr[1],\r\n          //这里是因为正则捕获支持双引号 单引号 和无引号的属性值\r\n          value: attr[3] || attr[4] || attr[5],\r\n        });\r\n        advance(attr[0].length);\r\n      }\r\n      //   代表一个标签匹配到结束的>了 代表开始标签解析完毕\r\n      if (end) {\r\n        advance(end[0].length);\r\n      }\r\n\r\n      return match;\r\n    }\r\n\r\n    return false; //不是开始标签\r\n  }\r\n\r\n  //循环解析html中字符串\r\n  while (html) {\r\n    //看解析的内容是否存在，如果存在就不停的解析，直到html为空\r\n\r\n    // 查找<\r\n    let textEnd = html.indexOf(\"<\"); //当前解析的开头是<\r\n\r\n    // 如果<在第一个 那么证明接下来就是一个标签 不管是开始还是结束标签\r\n    if (textEnd === 0) {\r\n      // 匹配开始标签<  解析开始标签\r\n      const startTagMatch = parseStartTag();\r\n\r\n      //处理开始标签<div id=\"app\">\r\n      if (startTagMatch) {\r\n        // 每次遇到<xxx>,都会调用start方法形成树结构\r\n        start(startTagMatch.tagName, startTagMatch.attrs);\r\n        continue;\r\n      }\r\n\r\n      // 处理结束标签 </div>\r\n      const endTagMatch = html.match(endTag);\r\n      if (endTagMatch) {\r\n        end(endTagMatch[1]);\r\n        advance(endTagMatch[0].length);\r\n      }\r\n    }\r\n\r\n    //处理开始标签后跟的文本\r\n    let text;\r\n    if (textEnd > 0) {\r\n      text = html.substring(0, textEnd);\r\n    }\r\n\r\n    if (text) {\r\n      chars(text);\r\n      advance(text.length);\r\n    }\r\n  }\r\n\r\n  //   返回生成的ast\r\n  return root;\r\n}\r\n\r\n","import { generate } from \"./generate\";\r\nimport { parserHTML } from \"./parser\";\r\n\r\nexport function compileToFunction(template) {\r\n  // 我们需要把html字符串变成render函数\r\n  // 1.把html代码转成ast语法树  ast用来描述代码本身形成树结构 不仅可以描述html 也能描述css以及js语法\r\n  // 很多库都运用到了ast 比如 webpack babel eslint等等\r\n  let root = parserHTML(template);\r\n\r\n  // 2.优化静态节点\r\n  // 这个有兴趣的可以去看源码  不影响核心功能就不实现了\r\n  //   if (options.optimize !== false) {\r\n  //     optimize(ast, options);\r\n  //   }\r\n\r\n  // 3.通过ast重新生成代码\r\n  // 我们最后生成的代码需要和render函数一样\r\n  // 类似_c('div',{id:\"app\"},_c('div',undefined,_v(\"hello\"+_s(name)),_c('span',undefined,_v(\"world\"))))\r\n  // _c代表创建元素 _v代表创建文本 _s代表文Json.stringify--把对象解析成文本\r\n  let code = generate(root);\r\n\r\n  //   使用with语法改变作用域为this  之后调用render函数可以使用call改变this 方便code里面的变量取值\r\n  let render = new Function(`with(this){return ${code}}`);\r\n\r\n  return render;\r\n}\r\n\r\n// html => ast (只能描述语法,语法不存在的属性无法描述) => render函数 + (with + new Function) => 虚拟dom\r\n// (增加额外的属性) => 产生真实dom\r\n","// patch用来渲染和更新视图 今天只介绍初次渲染的逻辑\r\nexport function patch(oldVnode, vnode) {\r\n  // 判断传入的oldVnode是否是一个真实元素\r\n  // 这里很关键  初次渲染 传入的vm.$el就是咱们传入的el选项  所以是真实dom\r\n  // 如果不是初始渲染而是视图更新的时候  vm.$el就被替换成了更新之前的老的虚拟dom\r\n\r\n  if (oldVnode.nodeType === 1) {\r\n    //用vnode来生成真实dom 替换成原本的dom元素\r\n\r\n    const parentElm = oldVnode.parentNode; //找到父元素\r\n\r\n    let elm = createElement(vnode); //根据虚拟节点 创建元素\r\n    // 这里不直接使用父元素appendChild是为了不破坏替换的位置\r\n    parentElm.insertBefore(elm, oldVnode.nextSibling); //在原来的dom元素创建新的dom元素\r\n    parentElm.removeChild(oldVnode); //删除原来的dom元素\r\n  }\r\n}\r\n\r\n//创建元素\r\nfunction createElement(vnode) {\r\n  let { tag, data, children, text, vm } = vnode;\r\n\r\n  //判断虚拟dom 是元素节点还是文本节点\r\n  if (typeof tag === \"string\") {\r\n    vnode.el = document.createElement(tag); //虚拟节点会有一个el属性对应真实节点\r\n\r\n    // 解析虚拟dom属性\r\n    updateProperties(vnode);\r\n    //递归遍历孩子\r\n    children.forEach((child) => {\r\n      vnode.el.appendChild(createElement(child));\r\n    });\r\n  } else {\r\n    vnode.el = document.createTextNode(text); //文本节点\r\n  }\r\n\r\n  return vnode.el;\r\n}\r\n\r\n// 解析vnode的data属性 映射到真实dom上\r\nfunction updateProperties(vnode) {\r\n  let newProps = vnode.data || {};\r\n  let el = vnode.el; //真实节点\r\n  for (let key in newProps) {\r\n    // style需要特殊处理下\r\n    if (key === \"style\") {\r\n      for (let styleName in newProps.style) {\r\n        if (styleName.match(/-/g)) {\r\n          styleName.split(\"-\").map((word, index) =>index === 0 ? word : word.charAt(0).toUpperCase() + word.slice(1)).join(\"\");\r\n          el.style[styleName] = newProps.style[styleName];\r\n        } else {\r\n          el.style[styleName] = newProps.style[styleName];\r\n        }\r\n      }\r\n    } else if (key === \"class\") {\r\n      el.className = newProps.class;\r\n    } else {\r\n      // 给这个元素添加属性 值就是对应的值\r\n      el.setAttribute(key, newProps[key]);\r\n    }\r\n  }\r\n}\r\n","import { patch } from \"./vdom/patch\";\r\n\r\nexport function lifecycleMixin(Vue) {\r\n  Vue.prototype._update = function (vnode) {\r\n    //根据虚拟dom创建真实dom\r\n    //既有初始化，又有更新\r\n    const vm = this;\r\n    patch(vm.$el, vnode);\r\n  };\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n\r\n  // 上一步模板编译解析生成了render函数\r\n  // 下一步就是执行vm._render()方法 调用生成的render函数 生成虚拟dom\r\n  // 最后使用vm._update()方法把虚拟dom渲染到页面\r\n\r\n  //更新函数，数据变化时，会再次调用此函数\r\n  let updateComponent = () => {\r\n    // 调用_render函数，生成虚拟dom\r\n    vm._update(vm._render()); //后续更新可以调用updateComponent 方法\r\n    // 用虚拟dom 生成真实dom\r\n  };\r\n\r\n  updateComponent();\r\n}\r\n","export function isFunction(val){\r\n    return typeof val === 'function';\r\n}\r\n\r\nexport function isObject(val){\r\n    return typeof val === 'object' && val !== null;\r\n}","let oldArrayPrototype = Array.prototype;\r\nexport let arrayMethods = Object.create(oldArrayPrototype);\r\n// arrayMethods.__proto__ = Array.prototype 继承\r\n\r\nlet methods = [\"push\", \"shift\", \"unshift\", \"pop\", \"reverse\", \"sort\", \"splice\"];\r\n\r\nmethods.forEach((method) => {\r\n  //用户调用的如果是以上的七个方法会用我自己重写的，否则用原来的数组方法\r\n  arrayMethods[method] = function (...args) {\r\n    //args 是参数列表 arr.push(1,2,3)\r\n    //相当于数组调用了重写后的方法。\r\n    oldArrayPrototype[method].call(this, ...args); //arr.push(1,2,3)\r\n\r\n    let inserted;\r\n    let ob = this.__ob__; //this.__ob__ 根据当前数组是数组的observer对象的实例, 获取到observeArray这个方法;\r\n    switch (method) {\r\n      case \"push\":\r\n      case \"unshift\":\r\n        inserted = args; //新增的内容\r\n        break;\r\n      case \"splice\":\r\n        inserted = args.slice(2);\r\n        break;\r\n    }\r\n\r\n    //如果有新增的内容要继续进行劫持 我需要观测数组的中的每一项(每一项可能是数组或对象) 而不是整个数组\r\n    if(inserted) ob.observeArray(inserted);\r\n  };\r\n});","import { isObject } from \"../utils\";\r\nimport { arrayMethods } from \"./array\";\r\n\r\n//1.如果数据是对象，会将对象不停递归，进行劫持\r\n//2.如果数据是数组，会重写劫持数组的方法，并对数组中不是基本数据类型的数据进行劫持\r\n\r\n//检测数据变化，类有类型， 对象无类型\r\nclass Observe {\r\n  constructor(data) {\r\n\r\n    Object.defineProperty(data, \"__ob__\", {\r\n      enumerable: false, //不可枚举\r\n      //  值指代的就是Observer的实例\r\n      value: this\r\n    })\r\n    // data.__ob__ = this; //所有被劫持过的属性都有__ob__属性\r\n\r\n    if (Array.isArray(data)) {\r\n      //数组劫持逻辑\r\n      //对数组原来的方法进行改写，切片编程 高阶函数\r\n      data.__proto__ = arrayMethods;\r\n      //如果数组中的数据是对象类型，需要监控对象的变化\r\n      this.observeArray(data);\r\n    } else {\r\n      //对象劫持逻辑\r\n      //对对象中的所有属性 进行劫持\r\n      this.walk(data);\r\n    }\r\n  }\r\n\r\n  //对我们数组中的数组 和 数组的对象再次劫持 递归了\r\n  observeArray(data) {\r\n    data.forEach((item) => {\r\n      observe(item);\r\n    });\r\n  }\r\n\r\n  walk(data) {\r\n    // 对象上的所有属性依次进行观测\r\n    Object.keys(data).forEach((key) => {\r\n      defineReactive(data, key, data[key]);\r\n    });\r\n  }\r\n}\r\n\r\n// vue2 会对对象进行遍历，将每个属性 用defineProperty 重新定义, 性能差\r\nfunction defineReactive(data, key, value) {\r\n  //value 有可能是对象\r\n  observe(value); //用户默认值是对象套对象，需要递归处理(性能较差)\r\n  Object.defineProperty(data, key, {\r\n    get() {\r\n      return value;\r\n    },\r\n    set(newV) {\r\n      observe(newV); //如果用户赋值一个新对象，需要将这个对象进行劫持\r\n      value = newV;\r\n    },\r\n  });\r\n}\r\nexport function observe(data) {\r\n  //如果是对象才观测\r\n\r\n  //不是对象直接跳出\r\n  if (!isObject(data)) {\r\n    return;\r\n  }\r\n\r\n  //如果对象被观测过，直接跳出\r\n  if (data.__ob__) {\r\n    return;\r\n  }\r\n\r\n  //默认最外层的data必须是个对象\r\n  return new Observe(data);\r\n}\r\n","import { observe } from \"./observer/index.js\";\r\nimport { isFunction } from \"./utils\";\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options;\r\n  // 这里初始化的顺序依次是 prop>methods>data>computed>watch\r\n  if (opts.data) {\r\n    initData(vm);\r\n  }\r\n  if (opts.computed) {\r\n    initComputed();\r\n  }\r\n  if (opts.watch) {\r\n    initWatch();\r\n  }\r\n}\r\n\r\n// 初始化data数据\r\nfunction initData(vm) {\r\n  let data = vm.$options.data;\r\n  // vue2中会将data的所有数据 进行数据劫持 Object.defineProperty\r\n\r\n  //data.call(vm) 将this指向vm并调用一下该方法保证返回的是一个对象 通过_data进行关联\r\n  data = vm._data = isFunction(data) ? data.call(vm) : data;\r\n\r\n  // 把data数据代理到vm 也就是Vue实例上面 我们可以使用this.a来访问this._data.a\r\n  for (let key in data) {\r\n    proxy(vm, \"_data\", key); //vm.name == 'xxx'\r\n  }\r\n\r\n  //对数据进行观测 --响应式数据核心\r\n  observe(data);\r\n}\r\n\r\n//代理函数\r\n// Object.defineProperty(object, key, { ... })：\r\n// 在目标对象 object 上定义一个新的属性 key，并通过配置属性描述符（descriptor）来设置它的 getter 和 setter。\r\nfunction proxy(vm, source, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[source][key];\r\n    },\r\n    set(newValue) {\r\n      vm[source][key] = newValue;\r\n    },\r\n  });\r\n}\r\n","import { compileToFunction } from \"./compiler/index.js\";\r\nimport { mountComponent } from \"./lifecycle.js\";\r\nimport { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) {\r\n\r\n  //表示在vue的基础上做一次混合操作\r\n  Vue.prototype._init = function (options) {\r\n    //el data\r\n    const vm = this;\r\n    vm.$options = options; //会对options进行扩展\r\n\r\n    //对数据进行初始化 watch computed props data ...\r\n    initState(vm); //vue.$options.data 数据劫持\r\n\r\n    // 如果有el属性，进行模版渲染(初次渲染？)\r\n    if (vm.$options.el) {\r\n      vm.$mount(vm.$options.el);\r\n    }\r\n  };\r\n\r\n\r\n  //挂载操作\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this;\r\n    const options = vm.$options;\r\n\r\n    //挂载位置\r\n    el = document.querySelector(el);\r\n    vm.$el = el;\r\n\r\n    // 把模版转换为 对应的渲染函数 => 虚拟dom概念 vnode =>diff算法 更新虚拟dom => 产生真实节点，更新\r\n    if (!options.render) {\r\n\r\n      // 如果没有render函数，则使用template 目前没有render\r\n      // 用户也没有传递template 就取el的内容作为模板\r\n      let template = options.template;\r\n      if (!template && el) {\r\n        // 如果没有template，但是有el，则使用el\r\n        template = el.outerHTML;\r\n\r\n        // 最终需要把tempalte模板转化成render函数\r\n        let render = compileToFunction(template);\r\n        options.render = render;\r\n      }\r\n    }\r\n\r\n\r\n    //options.render就是渲染函数  代表了与生命周期相关\r\n    //调用render方法，渲染成真实dom 替换掉页面的内容\r\n    mountComponent(vm, el);\r\n  };\r\n}\r\n","//处理元素(元素名称,属性,子节点) //产生虚拟节点\r\nexport function createElement(vm, tag, data = {}, ...children) {\r\n  return vnode(vm, tag, data, data.key, children, undefined);\r\n}\r\n\r\n//处理文本\r\nexport function createTextElement(vm, text) {\r\n  return vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n\r\n//实例对象 名称 属性  属性值 后代  文本\r\nfunction vnode(vm, tag, data, key, children, text) {\r\n  return {\r\n    vm,\r\n    tag,\r\n    data,\r\n    key,\r\n    children,\r\n    text, //....\r\n  };\r\n}\r\n","import { createElement, createTextElement } from \"./vdom/index\";\r\n\r\nexport function renderMixin(Vue) {\r\n\r\n  // render函数里面有_c _v _s方法需要定义\r\n\r\n  //处理元素(元素名称,属性,子节点) //产生虚拟节点\r\n  Vue.prototype._c = function () {\r\n    return createElement(this, ...arguments);\r\n  };\r\n\r\n  //处理文本\r\n  Vue.prototype._v = function (text) {\r\n    return createTextElement(this, text);\r\n  };\r\n\r\n  //处理属性(防止用户定义的属性是对象，将对象进行关联)\r\n  Vue.prototype._s = function (value) {\r\n    if (typeof value == \"object\") {\r\n      return JSON.stringify(value);\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  // 获取render函数\r\n  Vue.prototype._render = function () {\r\n    const vm = this;\r\n\r\n    //此时render是渲染函数\r\n    let render = vm.$options.render;\r\n\r\n    let vnode = render.call(vm);\r\n\r\n    return vnode;\r\n  };\r\n}\r\n","import { initMixin } from \"./init\";\r\nimport { lifecycleMixin } from \"./lifecycle\";\r\nimport { renderMixin } from \"./render\";\r\n\r\nfunction Vue(options) {\r\n    //options 为用户传入的选项\r\n    this._init(options); //初始化操作，组件\r\n}\r\n\r\n// 扩展原型\r\n// initMixin 把_init 方法挂载在 Vue 原型 供 Vue 实例调用\r\ninitMixin(Vue)\r\n\r\nrenderMixin(Vue); //_render 方法\r\nlifecycleMixin(Vue) //_update 方法\r\n\r\nexport default Vue;"],"names":["createElement"],"mappings":";;;;;;EAAA,MAAM,YAAY,GAAG,0BAA0B,CAAC;EAChD;EACA,SAAS,QAAQ,CAAC,KAAK,EAAE;EACzB;EACA,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC;EACf,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACzC,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACxB;EACA;EACA,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;EAC/B,MAAM,IAAI,QAAQ,GAAG,EAAE,CAAC;EACxB,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,qBAAqB,EAAE,YAAY;EAC5D;EACA,QAAQ,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;EAC9C,OAAO,CAAC,CAAC;EACT,MAAM,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;EAC5B,KAAK;EACL,IAAI,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACzD,GAAG;AACH;EACA,EAAE,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjC,CAAC;AACD;EACA,SAAS,GAAG,CAAC,EAAE,EAAE;AACjB;EACA;EACA;EACA;AACA;EACA;EACA,EAAE,IAAI,EAAE,CAAC,IAAI,KAAK,CAAC,EAAE;EACrB;EACA,IAAI,OAAO,QAAQ,CAAC,EAAE,CAAC,CAAC;EACxB,GAAG,MAAM;EACT;EACA,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC;AACvB;EACA;EACA,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;EAClC,MAAM,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;EAC7B,KAAK,MAAM;EACX;EACA,MAAM,IAAI,MAAM,GAAG,EAAE,CAAC;AACtB;EACA,MAAM,IAAI,KAAK,CAAC;AAChB;EACA;EACA,MAAM,IAAI,SAAS,IAAI,YAAY,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;AACnD;EACA,MAAM,QAAQ,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG;EAChD;EACA,QAAQ,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AAChC;EACA,QAAQ,IAAI,KAAK,GAAG,SAAS,EAAE;EAC/B;EACA,UAAU,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;EACpE,SAAS;EACT;EACA,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C;EACA;EACA,QAAQ,SAAS,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;EAC5C,OAAO;AACP;EACA;EACA,MAAM,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,EAAE;EACnC,QAAQ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;EAC3D,OAAO;AACP;EACA;EACA,MAAM,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,KAAK;EACL,GAAG;EACH,CAAC;AACD;EACA;EACA,SAAS,WAAW,CAAC,EAAE,EAAE;EACzB,EAAE,IAAI,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC;AAC7B;EACA,EAAE,IAAI,QAAQ,EAAE;EAChB,IAAI,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EACjD,GAAG;EACH,CAAC;AACD;EACA;EACO,SAAS,QAAQ,CAAC,EAAE,EAAE;AAC7B;EACA,EAAE,IAAI,QAAQ,GAAG,WAAW,CAAC,EAAE,CAAC,CAAC;AACjC;EACA;EACA,EAAE,IAAI,IAAI,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,WAAW,CAAC;AAClF,IAAI,QAAQ,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,EAAE;AAClC,GAAG,CAAC,CAAC,CAAC;AACN;EACA,EAAE,OAAO,IAAI,CAAC;EACd;;EC/FA;EACA,MAAM,MAAM,GAAG,CAAC,4BAA4B,CAAC,CAAC;EAC9C,MAAM,YAAY,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,YAAY,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;EACrD,MAAM,aAAa,GAAG,YAAY,CAAC;EACnC,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;EACxD,MAAM,SAAS,GAAG,2EAA2E,CAAC;AAC9F;EACA;AACA;EACA;EACA,SAAS,gBAAgB,CAAC,OAAO,EAAE,KAAK,EAAE;EAC1C,EAAE,OAAO;EACT,IAAI,GAAG,EAAE,OAAO;EAChB,IAAI,IAAI,EAAE,CAAC;EACX,IAAI,QAAQ,EAAE,EAAE;EAChB,IAAI,MAAM,EAAE,IAAI;EAChB,IAAI,KAAK;EACT,GAAG,CAAC;EACJ,CAAC;AACD;EACA;EACA,IAAI,IAAI,GAAG,IAAI,CAAC;EAChB;EACA,IAAI,KAAK,GAAG,EAAE,CAAC;AACf;EACA,SAAS,KAAK,CAAC,OAAO,EAAE,UAAU,EAAE;AACpC;EACA,EAAE,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACvC;EACA,EAAE,IAAI,OAAO,GAAG,gBAAgB,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;AACtD;EACA;EACA,EAAE,IAAI,CAAC,IAAI,EAAE;EACb,IAAI,IAAI,GAAG,OAAO,CAAC;EACnB,GAAG;EACH,EAAE,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AAC1B;EACA;EACA,EAAE,IAAI,MAAM,EAAE;EACd,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EAClC,GAAG;EACH,EAAE,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EACtB,CAAC;AACD;EACA,SAAS,GAAG,CAAC,OAAO,EAAE;EACtB,EAAE,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;EACzB,EAAE,IAAI,IAAI,CAAC,GAAG,KAAK,OAAO,EAAE;EAC5B,IAAI,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;EAC5B,GAAG;EACH,CAAC;AACD;EACA,SAAS,KAAK,CAAC,IAAI,EAAE;EACrB,EAAE,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;EACjC,EAAE,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EACvC,EAAE,IAAI,IAAI,EAAE;EACZ,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;EACzB,MAAM,IAAI,EAAE,CAAC;EACb,MAAM,IAAI;EACV,KAAK,CAAC,CAAC;EACP,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;AACA;AACA;AACA;EACA;EACO,SAAS,UAAU,CAAC,IAAI,EAAE;EACjC;EACA,EAAE,SAAS,OAAO,CAAC,GAAG,EAAE;EACxB,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;EAC/B,GAAG;AACH;EACA;EACA,EAAE,SAAS,aAAa,GAAG;EAC3B,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC3C;EACA,IAAI,IAAI,KAAK,EAAE;EACf,MAAM,MAAM,KAAK,GAAG;EACpB,QAAQ,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;EACzB,QAAQ,KAAK,EAAE,EAAE;EACjB,OAAO,CAAC;AACR;EACA;EACA,MAAM,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AAC/B;EACA;EACA;EACA;AACA;EACA;EACA,MAAM,IAAI,GAAG,CAAC;EACd,MAAM,IAAI,IAAI,CAAC;EACf;EACA,MAAM,OAAO,EAAE,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,KAAK,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE;EACnF;EACA,QAAQ,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;EACzB,UAAU,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;EACvB;EACA,UAAU,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;EAC9C,SAAS,CAAC,CAAC;EACX,QAAQ,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;EAChC,OAAO;EACP;EACA,MAAM,IAAI,GAAG,EAAE;EACf,QAAQ,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;EAC/B,OAAO;AACP;EACA,MAAM,OAAO,KAAK,CAAC;EACnB,KAAK;AACL;EACA,IAAI,OAAO,KAAK,CAAC;EACjB,GAAG;AACH;EACA;EACA,EAAE,OAAO,IAAI,EAAE;EACf;AACA;EACA;EACA,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACpC;EACA;EACA,IAAI,IAAI,OAAO,KAAK,CAAC,EAAE;EACvB;EACA,MAAM,MAAM,aAAa,GAAG,aAAa,EAAE,CAAC;AAC5C;EACA;EACA,MAAM,IAAI,aAAa,EAAE;EACzB;EACA,QAAQ,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC;EAC1D,QAAQ,SAAS;EACjB,OAAO;AACP;EACA;EACA,MAAM,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;EAC7C,MAAM,IAAI,WAAW,EAAE;EACvB,QAAQ,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5B,QAAQ,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;EACvC,OAAO;EACP,KAAK;AACL;EACA;EACA,IAAI,IAAI,IAAI,CAAC;EACb,IAAI,IAAI,OAAO,GAAG,CAAC,EAAE;EACrB,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;EACxC,KAAK;AACL;EACA,IAAI,IAAI,IAAI,EAAE;EACd,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC;EAClB,MAAM,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC3B,KAAK;EACL,GAAG;AACH;EACA;EACA,EAAE,OAAO,IAAI,CAAC;EACd;;EC3JO,SAAS,iBAAiB,CAAC,QAAQ,EAAE;EAC5C;EACA;EACA;EACA,EAAE,IAAI,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;AAClC;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA,EAAE,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC5B;EACA;EACA,EAAE,IAAI,MAAM,GAAG,IAAI,QAAQ,CAAC,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D;EACA,EAAE,OAAO,MAAM,CAAC;EAChB,CAAC;AACD;EACA;EACA;;EC5BA;EACO,SAAS,KAAK,CAAC,QAAQ,EAAE,KAAK,EAAE;EACvC;EACA;EACA;AACA;EACA,EAAE,IAAI,QAAQ,CAAC,QAAQ,KAAK,CAAC,EAAE;EAC/B;AACA;EACA,IAAI,MAAM,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC;AAC1C;EACA,IAAI,IAAI,GAAG,GAAGA,eAAa,CAAC,KAAK,CAAC,CAAC;EACnC;EACA,IAAI,SAAS,CAAC,YAAY,CAAC,GAAG,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC;EACtD,IAAI,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;EACpC,GAAG;EACH,CAAC;AACD;EACA;EACA,SAASA,eAAa,CAAC,KAAK,EAAE;EAC9B,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC;AAChD;EACA;EACA,EAAE,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;EAC/B,IAAI,KAAK,CAAC,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AAC3C;EACA;EACA,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAC;EAC5B;EACA,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK;EAChC,MAAM,KAAK,CAAC,EAAE,CAAC,WAAW,CAACA,eAAa,CAAC,KAAK,CAAC,CAAC,CAAC;EACjD,KAAK,CAAC,CAAC;EACP,GAAG,MAAM;EACT,IAAI,KAAK,CAAC,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;EAC7C,GAAG;AACH;EACA,EAAE,OAAO,KAAK,CAAC,EAAE,CAAC;EAClB,CAAC;AACD;EACA;EACA,SAAS,gBAAgB,CAAC,KAAK,EAAE;EACjC,EAAE,IAAI,QAAQ,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,CAAC;EAClC,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;EACpB,EAAE,KAAK,IAAI,GAAG,IAAI,QAAQ,EAAE;EAC5B;EACA,IAAI,IAAI,GAAG,KAAK,OAAO,EAAE;EACzB,MAAM,KAAK,IAAI,SAAS,IAAI,QAAQ,CAAC,KAAK,EAAE;EAC5C,QAAQ,IAAI,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;EACnC,UAAU,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,IAAI,KAAK,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;EAC/H,UAAU,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;EAC1D,SAAS,MAAM;EACf,UAAU,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;EAC1D,SAAS;EACT,OAAO;EACP,KAAK,MAAM,IAAI,GAAG,KAAK,OAAO,EAAE;EAChC,MAAM,EAAE,CAAC,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC;EACpC,KAAK,MAAM;EACX;EACA,MAAM,EAAE,CAAC,YAAY,CAAC,GAAG,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EAC1C,KAAK;EACL,GAAG;EACH;;EC3DO,SAAS,cAAc,CAAC,GAAG,EAAE;EACpC,EAAE,GAAG,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,KAAK,EAAE;EAC3C;EACA;EACA,IAAI,MAAM,EAAE,GAAG,IAAI,CAAC;EACpB,IAAI,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;EACzB,GAAG,CAAC;EACJ,CAAC;AACD;EACO,SAAS,cAAc,CAAC,EAAE,EAAE,EAAE,EAAE;AACvC;EACA;EACA;EACA;AACA;EACA;EACA,EAAE,IAAI,eAAe,GAAG,MAAM;EAC9B;EACA,IAAI,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;EAC7B;EACA,GAAG,CAAC;AACJ;EACA,EAAE,eAAe,EAAE,CAAC;EACpB;;ECzBO,SAAS,UAAU,CAAC,GAAG,CAAC;EAC/B,IAAI,OAAO,OAAO,GAAG,KAAK,UAAU,CAAC;EACrC,CAAC;AACD;EACO,SAAS,QAAQ,CAAC,GAAG,CAAC;EAC7B,IAAI,OAAO,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,IAAI,CAAC;EACnD;;ECNA,IAAI,iBAAiB,GAAG,KAAK,CAAC,SAAS,CAAC;EACjC,IAAI,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;EAC3D;AACA;EACA,IAAI,OAAO,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;AAC/E;EACA,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK;EAC5B;EACA,EAAE,YAAY,CAAC,MAAM,CAAC,GAAG,UAAU,GAAG,IAAI,EAAE;EAC5C;EACA;EACA,IAAI,iBAAiB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC;AAClD;EACA,IAAI,IAAI,QAAQ,CAAC;EACjB,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;EACzB,IAAI,QAAQ,MAAM;EAClB,MAAM,KAAK,MAAM,CAAC;EAClB,MAAM,KAAK,SAAS;EACpB,QAAQ,QAAQ,GAAG,IAAI,CAAC;EACxB,QAAQ,MAAM;EACd,MAAM,KAAK,QAAQ;EACnB,QAAQ,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;EACjC,QAAQ,MAAM;EACd,KAAK;AACL;EACA;EACA,IAAI,GAAG,QAAQ,EAAE,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;EAC3C,GAAG,CAAC;EACJ,CAAC,CAAC;;ECzBF;EACA;AACA;EACA;EACA,MAAM,OAAO,CAAC;EACd,EAAE,WAAW,CAAC,IAAI,EAAE;AACpB;EACA,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE;EAC1C,MAAM,UAAU,EAAE,KAAK;EACvB;EACA,MAAM,KAAK,EAAE,IAAI;EACjB,KAAK,EAAC;EACN;AACA;EACA,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;EAC7B;EACA;EACA,MAAM,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;EACpC;EACA,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;EAC9B,KAAK,MAAM;EACX;EACA;EACA,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACtB,KAAK;EACL,GAAG;AACH;EACA;EACA,EAAE,YAAY,CAAC,IAAI,EAAE;EACrB,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;EAC3B,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC;EACpB,KAAK,CAAC,CAAC;EACP,GAAG;AACH;EACA,EAAE,IAAI,CAAC,IAAI,EAAE;EACb;EACA,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK;EACvC,MAAM,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;EAC3C,KAAK,CAAC,CAAC;EACP,GAAG;EACH,CAAC;AACD;EACA;EACA,SAAS,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE;EAC1C;EACA,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;EACjB,EAAE,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE;EACnC,IAAI,GAAG,GAAG;EACV,MAAM,OAAO,KAAK,CAAC;EACnB,KAAK;EACL,IAAI,GAAG,CAAC,IAAI,EAAE;EACd,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC;EACpB,MAAM,KAAK,GAAG,IAAI,CAAC;EACnB,KAAK;EACL,GAAG,CAAC,CAAC;EACL,CAAC;EACM,SAAS,OAAO,CAAC,IAAI,EAAE;EAC9B;AACA;EACA;EACA,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;EACvB,IAAI,OAAO;EACX,GAAG;AACH;EACA;EACA,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE;EACnB,IAAI,OAAO;EACX,GAAG;AACH;EACA;EACA,EAAE,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC;EAC3B;;ECvEO,SAAS,SAAS,CAAC,EAAE,EAAE;EAC9B,EAAE,MAAM,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC;EAC3B;EACA,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE;EACjB,IAAI,QAAQ,CAAC,EAAE,CAAC,CAAC;EACjB,GAAG;EACH,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE;EACrB,IAAI,YAAY,EAAE,CAAC;EACnB,GAAG;EACH,EAAE,IAAI,IAAI,CAAC,KAAK,EAAE;EAClB,IAAI,SAAS,EAAE,CAAC;EAChB,GAAG;EACH,CAAC;AACD;EACA;EACA,SAAS,QAAQ,CAAC,EAAE,EAAE;EACtB,EAAE,IAAI,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC;EAC9B;AACA;EACA;EACA,EAAE,IAAI,GAAG,EAAE,CAAC,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;AAC5D;EACA;EACA,EAAE,KAAK,IAAI,GAAG,IAAI,IAAI,EAAE;EACxB,IAAI,KAAK,CAAC,EAAE,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;EAC5B,GAAG;AACH;EACA;EACA,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;EAChB,CAAC;AACD;EACA;EACA;EACA;EACA,SAAS,KAAK,CAAC,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE;EAChC,EAAE,MAAM,CAAC,cAAc,CAAC,EAAE,EAAE,GAAG,EAAE;EACjC,IAAI,GAAG,GAAG;EACV,MAAM,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;EAC7B,KAAK;EACL,IAAI,GAAG,CAAC,QAAQ,EAAE;EAClB,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;EACjC,KAAK;EACL,GAAG,CAAC,CAAC;EACL;;EC1CO,SAAS,SAAS,CAAC,GAAG,EAAE;AAC/B;EACA;EACA,EAAE,GAAG,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,OAAO,EAAE;EAC3C;EACA,IAAI,MAAM,EAAE,GAAG,IAAI,CAAC;EACpB,IAAI,EAAE,CAAC,QAAQ,GAAG,OAAO,CAAC;AAC1B;EACA;EACA,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;AAClB;EACA;EACA,IAAI,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE;EACxB,MAAM,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;EAChC,KAAK;EACL,GAAG,CAAC;AACJ;AACA;EACA;EACA,EAAE,GAAG,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,EAAE,EAAE;EACvC,IAAI,MAAM,EAAE,GAAG,IAAI,CAAC;EACpB,IAAI,MAAM,OAAO,GAAG,EAAE,CAAC,QAAQ,CAAC;AAChC;EACA;EACA,IAAI,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;EACpC,IAAI,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC;AAChB;EACA;EACA,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AACzB;EACA;EACA;EACA,MAAM,IAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;EACtC,MAAM,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE;EAC3B;EACA,QAAQ,QAAQ,GAAG,EAAE,CAAC,SAAS,CAAC;AAChC;EACA;EACA,QAAQ,IAAI,MAAM,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC;EACjD,QAAQ,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;EAChC,OAAO;EACP,KAAK;AACL;AACA;EACA;EACA;EACA,IAAI,cAAc,CAAC,EAAM,CAAC,CAAC;EAC3B,GAAG,CAAC;EACJ;;ECpDA;EACO,SAAS,aAAa,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,QAAQ,EAAE;EAC/D,EAAE,OAAO,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;EAC7D,CAAC;AACD;EACA;EACO,SAAS,iBAAiB,CAAC,EAAE,EAAE,IAAI,EAAE;EAC5C,EAAE,OAAO,KAAK,CAAC,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;EACrE,CAAC;AACD;EACA;EACA,SAAS,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE;EACnD,EAAE,OAAO;EACT,IAAI,EAAE;EACN,IAAI,GAAG;EACP,IAAI,IAAI;EACR,IAAI,GAAG;EACP,IAAI,QAAQ;EACZ,IAAI,IAAI;EACR,GAAG,CAAC;EACJ;;EClBO,SAAS,WAAW,CAAC,GAAG,EAAE;AACjC;EACA;AACA;EACA;EACA,EAAE,GAAG,CAAC,SAAS,CAAC,EAAE,GAAG,YAAY;EACjC,IAAI,OAAO,aAAa,CAAC,IAAI,EAAE,GAAG,SAAS,CAAC,CAAC;EAC7C,GAAG,CAAC;AACJ;EACA;EACA,EAAE,GAAG,CAAC,SAAS,CAAC,EAAE,GAAG,UAAU,IAAI,EAAE;EACrC,IAAI,OAAO,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EACzC,GAAG,CAAC;AACJ;EACA;EACA,EAAE,GAAG,CAAC,SAAS,CAAC,EAAE,GAAG,UAAU,KAAK,EAAE;EACtC,IAAI,IAAI,OAAO,KAAK,IAAI,QAAQ,EAAE;EAClC,MAAM,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;EACnC,KAAK;AACL;EACA,IAAI,OAAO,KAAK,CAAC;EACjB,GAAG,CAAC;AACJ;EACA;EACA,EAAE,GAAG,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY;EACtC,IAAI,MAAM,EAAE,GAAG,IAAI,CAAC;AACpB;EACA;EACA,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC;AACpC;EACA,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAChC;EACA,IAAI,OAAO,KAAK,CAAC;EACjB,GAAG,CAAC;EACJ;;EChCA,SAAS,GAAG,CAAC,OAAO,EAAE;EACtB;EACA,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;EACxB,CAAC;AACD;EACA;EACA;EACA,SAAS,CAAC,GAAG,EAAC;AACd;EACA,WAAW,CAAC,GAAG,CAAC,CAAC;EACjB,cAAc,CAAC,GAAG,EAAC;;;;;;;;"}